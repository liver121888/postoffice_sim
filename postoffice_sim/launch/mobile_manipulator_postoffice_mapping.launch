<?xml version="1.0"?>
<launch>
  <arg name="pose_initial_x" value="0"/>
  <arg name="pose_initial_y" value="0"/>
  <arg name="pose_initial_a" value="0"/>
  <arg name="pose_initial_z" value="1"/>

  <!-- <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/mobile_manipulator.urdf.xacro" /> -->
  <param name="robot_description" textfile="$(find robot_description)/urdf/mobile_kinect_manipulator.urdf" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	  <arg name="world_name" value="$(find postoffice_sim)/worlds/postoffice.world"/>
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/> -->
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>/ -->
  </include>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x $(arg pose_initial_x) -y $(arg pose_initial_y) -z $(arg pose_initial_z) -model mobile_manipulator" />
  <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description_sdf -sdf -x -2 -y 0 -z 1 -model mobile_manipulator" /> -->
  <rosparam command="load" file="$(find robot_description)/config/arm_control.yaml" />
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
  <rosparam command="load" file="$(find robot_description)/config/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
  <rosparam command="load" file="$(find robot_description)/config/control_mapping.yaml" />
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="robot_base_joint_publisher robot_base_velocity_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" >
    <remap from="/cmd_vel" to="/robot_base_velocity_controller/cmd_vel" />
  </node>

  <node name="karto_slam" pkg="slam_karto" type="slam_karto">
    <param name="resolution" value="0.1"/>
  </node>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find postoffice_sim)/rviz/postoffice_mapping.rviz" />

</launch>
